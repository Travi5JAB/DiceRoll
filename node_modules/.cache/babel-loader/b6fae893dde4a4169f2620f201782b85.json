{"ast":null,"code":"var _jsxFileName = \"/Users/learn/Desktop/folder/diceroll/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Dice from './dice.js'; // import Log from './dicelog.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logandroll = () => {\n      this.logHandler();\n      this.rolldice();\n    };\n\n    this.logHandler = () => {\n      let _this$state = this.state,\n          diceLog = _this$state.diceLog,\n          diceNum = _this$state.diceNum;\n      let newRandom = diceLog.push(diceNum);\n      console.log(newRandom);\n      this.setState({\n        diceLog: diceLog\n      });\n    };\n\n    this.rolldice = () => {\n      // let { } = this.state\n      let random = Math.floor(Math.random() * 6 + 1);\n      this.setState({\n        diceNum: random\n      });\n    };\n\n    this.state = {\n      diceLog: [],\n      diceNum: 1\n    };\n  }\n\n  render() {\n    let diceNum = this.state.diceNum;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Hello World\"), React.createElement(Dice, {\n      rollFunction: this.rolldice,\n      randomNum: diceNum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.logandroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Roll Dice\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learn/Desktop/folder/diceroll/src/App.js"],"names":["React","Component","Dice","App","constructor","props","logandroll","logHandler","rolldice","state","diceLog","diceNum","newRandom","push","console","log","setState","random","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACxBG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,UAPkB,GAOL,MAAM;AACf,WAAKC,UAAL;AACA,WAAKC,QAAL;AACH,KAViB;;AAAA,SAWlBD,UAXkB,GAWL,MAAM;AAAA,wBACU,KAAKE,KADf;AAAA,UACVC,OADU,eACVA,OADU;AAAA,UACDC,OADC,eACDA,OADC;AAEf,UAAIC,SAAS,GAAGF,OAAO,CAACG,IAAR,CAAaF,OAAb,CAAhB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,WAAKI,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAEA;AAAV,OAAd;AAEH,KAjBiB;;AAAA,SAkBlBF,QAlBkB,GAkBP,MAAM;AACb;AACA,UAAIS,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAc,CAAd,GAAgB,CAA3B,CAAb;AACA,WAAKD,QAAL,CAAc;AAACL,QAAAA,OAAO,EAAEM;AAAV,OAAd;AACH,KAtBiB;;AAEV,SAAKR,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIP;;AAiBDS,EAAAA,MAAM,GAAE;AAAA,QACET,OADF,GACc,KAAKF,KADnB,CACEE,OADF;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD;AACA,MAAA,YAAY,EAAI,KAAKH,QADrB;AAEA,MAAA,SAAS,EAAIG,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKE;AAAQ,MAAA,OAAO,EAAI,KAAKL,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF;AAUD;;AApCuB;;AAsC5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Dice from './dice.js'\n// import Log from './dicelog.js'\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                diceLog: [],\n                diceNum: 1,\n            }\n    }\n    logandroll = () => {\n        this.logHandler()\n        this.rolldice()\n    }\n    logHandler = () => {\n        let {diceLog, diceNum} = this.state\n        let newRandom = diceLog.push(diceNum)\n        console.log(newRandom);\n        this.setState({diceLog: diceLog})\n\n    }\n    rolldice = () => {\n        // let { } = this.state\n        let random = Math.floor(Math.random()*6+1)\n        this.setState({diceNum: random})\n    }\n    render(){\n        let { diceNum } = this.state\n      return (\n        <div className=\"App\">\n          <h1>Hello World</h1>\n          <Dice\n          rollFunction = {this.rolldice}\n          randomNum = {diceNum}/>\n          <button onClick = {this.logandroll}>Roll Dice</button>\n\n        </div>\n      );\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}