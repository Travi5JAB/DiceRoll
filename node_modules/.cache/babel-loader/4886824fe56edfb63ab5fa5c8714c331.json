{"ast":null,"code":"var _jsxFileName = \"/Users/learn/Desktop/folder/diceroll/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Dice from './dice.js';\nimport Log from './dicelog.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logandroll = () => {\n      this.rolldice();\n      this.logHandler();\n      this.logHandlerMaster();\n    };\n\n    this.logHandlerMaster = () => {\n      let _this$state = this.state,\n          diceNum = _this$state.diceNum,\n          diceLogMaster = _this$state.diceLogMaster,\n          currentDiceId = _this$state.currentDiceId,\n          diceId = _this$state.diceId;\n      diceLogMaster[currentDiceId].push(diceNum);\n      this.setState({\n        diceLogMaster: diceLogMaster\n      });\n      console.log(diceLogMaster);\n      console.log(diceId);\n    };\n\n    this.rolldice = () => {\n      let _this$state2 = this.state,\n          picInd = _this$state2.picInd,\n          diceId = _this$state2.diceId,\n          currentDiceId = _this$state2.currentDiceId;\n      let random = Math.floor(Math.random() * 6 + 1);\n      let picselect = random - 1;\n      this.setState({\n        diceId: diceId\n      });\n      this.setState({\n        diceNum: random\n      });\n      this.setState({\n        picInd: picselect\n      });\n    };\n\n    this.logHandler = () => {\n      let _this$state3 = this.state,\n          individualDiceLogs = _this$state3.individualDiceLogs,\n          diceNum = _this$state3.diceNum;\n      individualDiceLogs.push(diceNum);\n      this.setState({\n        individualDiceLogs: individualDiceLogs\n      });\n    };\n\n    this.refreshState = () => {\n      let diceLogMaster = this.state.diceLogMaster;\n      this.setState({\n        diceLogMaster: []\n      });\n    };\n\n    this.addDice = () => {\n      let _this$state4 = this.state,\n          extraDice = _this$state4.extraDice,\n          diceNum = _this$state4.diceNum,\n          picInd = _this$state4.picInd,\n          picLog = _this$state4.picLog,\n          diceId = _this$state4.diceId,\n          diceLogMaster = _this$state4.diceLogMaster,\n          currentDiceId = _this$state4.currentDiceId;\n      extraDice.push(React.createElement(Dice, {\n        diceId: diceId,\n        logandroll: this.logandroll,\n        diceNum: diceNum,\n        picInd: picInd,\n        picLog: picLog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n      let updatedArr = diceLogMaster.push([]);\n      this.setState({\n        currentDiceId: diceId\n      });\n      this.setState({\n        diceLogMaster: diceLogMaster\n      });\n      this.setState({\n        extraDice: extraDice\n      });\n      this.setState({\n        diceId: diceId + 1\n      });\n    };\n\n    this.removeDice = () => {\n      let _this$state5 = this.state,\n          extraDice = _this$state5.extraDice,\n          diceId = _this$state5.diceId,\n          currentDiceId = _this$state5.currentDiceId;\n      extraDice.pop();\n      this.setState({\n        extraDice: extraDice\n      });\n      this.setState({\n        currentDiceId: diceId\n      });\n      this.setState({\n        diceId: diceId - 1\n      });\n    };\n\n    this.state = {\n      diceLogMaster: [[]],\n      extraDice: [],\n      diceNum: 1,\n      diceId: 0,\n      currentDiceId: 0,\n      individualDiceLogs: []\n    };\n  }\n\n  //roll all dice\n  // remove dice\n  //add game\n  //remove game\n  render() {\n    let _this$state6 = this.state,\n        diceNum = _this$state6.diceNum,\n        diceLogMaster = _this$state6.diceLogMaster,\n        picLog = _this$state6.picLog,\n        picInd = _this$state6.picInd,\n        extraDice = _this$state6.extraDice,\n        individualDiceLogs = _this$state6.individualDiceLogs;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"DiceRoller\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Dice, {\n      logandroll: this.logandroll,\n      diceNum: diceNum,\n      picInd: picInd,\n      picLog: picLog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, extraDice), React.createElement(\"button\", {\n      onClick: this.addDice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Add A Dice to Game\"), React.createElement(\"button\", {\n      onClick: this.removeDice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Remove A Dice from Game\")), React.createElement(\"div\", {\n      className: \"card col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Log, {\n      rollLog: diceLogMaster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      id: \"refreshbtn\",\n      onClick: this.refreshState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Refresh Log\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learn/Desktop/folder/diceroll/src/App.js"],"names":["React","Component","Dice","Log","App","constructor","props","logandroll","rolldice","logHandler","logHandlerMaster","state","diceNum","diceLogMaster","currentDiceId","diceId","push","setState","console","log","picInd","random","Math","floor","picselect","individualDiceLogs","refreshState","addDice","extraDice","picLog","updatedArr","removeDice","pop","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Dice from './dice.js'\nimport Log from './dicelog.js'\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                diceLogMaster: [[]],\n                extraDice: [],\n                diceNum: 1,\n                diceId: 0,\n                currentDiceId: 0,\n                individualDiceLogs:[]\n            }\n    }\n    logandroll = () => {\n        this.rolldice()\n        this.logHandler()\n        this.logHandlerMaster()\n    }\n    logHandlerMaster = () => {\n        let {diceNum, diceLogMaster, currentDiceId, diceId} = this.state\n        diceLogMaster[currentDiceId].push(diceNum)\n        this.setState({diceLogMaster: diceLogMaster})\n        console.log(diceLogMaster);\n        console.log(diceId);\n\n\n\n    }\n    rolldice = () => {\n        let { picInd, diceId, currentDiceId} = this.state\n        let random = Math.floor(Math.random()*6+1)\n        let picselect = random -1\n        this.setState({diceId: diceId})\n        this.setState({diceNum: random})\n        this.setState({picInd: picselect})\n\n\n    }\n    logHandler = () =>{\n        let {individualDiceLogs, diceNum} = this.state\n        individualDiceLogs.push(diceNum)\n        this.setState({individualDiceLogs: individualDiceLogs})\n\n    }\n    refreshState = () =>{\n        let { diceLogMaster } = this.state\n        this.setState ({diceLogMaster : []})\n\n    }\n    addDice = () => {\n        let {extraDice, diceNum, picInd, picLog, diceId, diceLogMaster, currentDiceId} = this.state\n        extraDice.push(<Dice diceId={diceId} logandroll = {this.logandroll}\n        diceNum= {diceNum}\n        picInd = {picInd}\n        picLog = {picLog}/>)\n        let updatedArr = diceLogMaster.push([])\n        this.setState({currentDiceId: diceId})\n        this.setState({diceLogMaster: diceLogMaster})\n        this.setState({extraDice: extraDice})\n        this.setState({diceId: diceId +1})\n}\n    removeDice = () => {\n        let { extraDice, diceId, currentDiceId } = this.state\n            extraDice.pop()\n            this.setState({extraDice: extraDice})\n            this.setState({currentDiceId: diceId})\n            this.setState({diceId: diceId -1})\n        }\n        //roll all dice\n        // remove dice\n        //add game\n        //remove game\n\n    render(){\n        let { diceNum, diceLogMaster, picLog, picInd, extraDice, individualDiceLogs} = this.state\n      return (\n        <div className=\"App\">\n            <h1>DiceRoller</h1>\n            <div className = \"row\">\n              <div className = \"card col-sm-6\">\n                  <Dice\n                  logandroll = {this.logandroll}\n                  diceNum= {diceNum}\n                  picInd = {picInd}\n                  picLog = {picLog}/>\n                  <div>{extraDice}</div>\n                  <button onClick= {this.addDice}>Add A Dice to Game</button>\n                  <button onClick= {this.removeDice}>Remove A Dice from Game</button>\n              </div>\n              <div className = \"card col-sm-6\">\n                  <Log\n                  rollLog = {diceLogMaster}/>\n                  <button className = \"btn btn-primary\" id = \"refreshbtn\"onClick = {this.refreshState}>Refresh Log</button>\n                </div>\n                <div>\n\n                </div>\n\n            </div>\n        </div>\n      );\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}