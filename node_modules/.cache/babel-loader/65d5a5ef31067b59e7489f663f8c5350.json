{"ast":null,"code":"var _jsxFileName = \"/Users/learn/Desktop/folder/diceroll/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Dice from './dice.js';\nimport Log from './dicelog.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logandroll = () => {\n      this.rolldice();\n      this.logHandler();\n    };\n\n    this.logHandler = () => {\n      let _this$state = this.state,\n          diceLogMaster = _this$state.diceLogMaster,\n          diceNum = _this$state.diceNum;\n      let newRandom = diceLogMaster.push(diceNum);\n      this.setState({\n        diceLogMaster: diceLogMaster\n      });\n    };\n\n    this.rolldice = () => {\n      let picInd = this.state.picInd;\n      let random = Math.floor(Math.random() * 6 + 1);\n      let picselect = random - 1;\n      this.setState({\n        diceNum: random\n      });\n      this.setState({\n        picInd: picselect\n      });\n    };\n\n    this.refreshState = () => {\n      let diceLogMaster = this.state.diceLogMaster;\n      this.setState({\n        diceLogMaster: []\n      });\n    };\n\n    this.addDice = () => {\n      let _this$state2 = this.state,\n          extraDice = _this$state2.extraDice,\n          diceNum = _this$state2.diceNum,\n          picInd = _this$state2.picInd,\n          picLog = _this$state2.picLog;\n      extraDice.push(React.createElement(Dice, {\n        logandroll: this.logandroll,\n        diceNum: diceNum,\n        picInd: picInd,\n        picLog: picLog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n      this.setState({\n        extraDice: extraDice\n      });\n    };\n\n    this.remove = () => {\n      let extraDice = this.state.extraDice;\n      extraDice.pop();\n      this.setState({\n        extraDice: extraDice\n      });\n    };\n\n    this.state = {\n      diceLogMaster: [],\n      diceNum: 1,\n      extraDice: []\n    };\n  }\n\n  //roll all dice\n  // remove dice\n  //add game\n  //remove game\n  render() {\n    let _this$state3 = this.state,\n        diceNum = _this$state3.diceNum,\n        diceLogMaster = _this$state3.diceLogMaster,\n        picLog = _this$state3.picLog,\n        picInd = _this$state3.picInd,\n        extraDice = _this$state3.extraDice;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"DiceRoller\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Dice, {\n      logandroll: this.logandroll,\n      diceNum: diceNum,\n      picInd: picInd,\n      picLog: picLog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, extraDice), React.createElement(\"button\", {\n      onClick: this.addDice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Add A Dice to Game\")), React.createElement(\"div\", {\n      className: \"card col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Log, {\n      rollLog: diceLogMaster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      id: \"refreshbtn\",\n      onClick: this.refreshState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Refresh Log\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learn/Desktop/folder/diceroll/src/App.js"],"names":["React","Component","Dice","Log","App","constructor","props","logandroll","rolldice","logHandler","state","diceLogMaster","diceNum","newRandom","push","setState","picInd","random","Math","floor","picselect","refreshState","addDice","extraDice","picLog","remove","pop","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Dice from './dice.js'\nimport Log from './dicelog.js'\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                diceLogMaster: [],\n                diceNum: 1,\n                extraDice: [],\n            }\n    }\n    logandroll = () => {\n        this.rolldice()\n        this.logHandler()\n    }\n    logHandler = () => {\n        let {diceLogMaster, diceNum} = this.state\n        let newRandom = diceLogMaster.push(diceNum)\n        this.setState({diceLogMaster: diceLogMaster})\n\n    }\n    rolldice = () => {\n        let { picInd } = this.state\n        let random = Math.floor(Math.random()*6+1)\n        let picselect = random -1\n        this.setState({diceNum: random})\n        this.setState({picInd: picselect})\n\n    }\n    refreshState = () =>{\n        let { diceLogMaster } = this.state\n        this.setState ({diceLogMaster : []})\n\n    }\n    addDice = () => {\n        let {extraDice, diceNum, picInd, picLog} = this.state\n        extraDice.push(<Dice logandroll = {this.logandroll}\n        diceNum= {diceNum}\n        picInd = {picInd}\n        picLog = {picLog}/>)\n        this.setState({extraDice: extraDice})\n}\n    remove = () => {\n        let { extraDice } = this.state\n            extraDice.pop()\n            this.setState({extraDice: extraDice})\n        }\n        //roll all dice\n        // remove dice\n        //add game\n        //remove game\n        \n    render(){\n        let { diceNum, diceLogMaster, picLog, picInd, extraDice} = this.state\n      return (\n        <div className=\"App\">\n            <h1>DiceRoller</h1>\n            <div className = \"row\">\n              <div className = \"card col-sm-6\">\n                  <Dice\n                  logandroll = {this.logandroll}\n                  diceNum= {diceNum}\n                  picInd = {picInd}\n                  picLog = {picLog}/>\n                  <div>{extraDice}</div>\n                  <button onClick= {this.addDice}>Add A Dice to Game</button>\n              </div>\n              <div className = \"card col-sm-6\">\n                  <Log\n                  rollLog = {diceLogMaster}/>\n                  <button className = \"btn btn-primary\" id = \"refreshbtn\"onClick = {this.refreshState}>Refresh Log</button>\n                </div>\n                <div>\n\n                </div>\n\n            </div>\n        </div>\n      );\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}