{"ast":null,"code":"var _jsxFileName = \"/Users/learn/Desktop/folder/diceroll/src/dice.js\";\nimport React, { Component } from 'react';\n\nclass Dice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newlogandroll = () => {\n      this.newroll();\n      this.newlogHandlerMaster();\n    };\n\n    this.newroll = () => {\n      let _this$state = this.state,\n          picInd = _this$state.picInd,\n          diceId = _this$state.diceId,\n          currentDiceId = _this$state.currentDiceId;\n      this.setState({\n        currentDiceId: diceId\n      });\n      let random = Math.floor(Math.random() * 6 + 1);\n      let picselect = random - 1;\n      this.setState({\n        diceNum: random\n      });\n      this.setState({\n        picInd: picselect\n      });\n    };\n\n    this.newlogHandler = () => {\n      let _this$state2 = this.state,\n          individualDiceLogs = _this$state2.individualDiceLogs,\n          diceNum = _this$state2.diceNum;\n      individualDiceLogs.push(diceNum);\n      this.setState({\n        individualDiceLogs: individualDiceLogs\n      });\n    };\n\n    this.state = {\n      picLog: [\"url('dice1.jpg')\", \"url('dice2.jpg')\", \"url('dice3.jpg')\", \"url('dice4.jpg')\", \"url('dice5.jpg')\", \"url('dice6.jpg')\"],\n      picInd: 0\n    };\n  }\n\n  render() {\n    let _this$props = this.props,\n        picInd = _this$props.picInd,\n        logandroll = _this$props.logandroll,\n        diceNum = _this$props.diceNum,\n        diceId = _this$props.diceId;\n    let picLog = this.state.picLog;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, diceNum), React.createElement(\"button\", {\n      id: diceId,\n      class: \"diceButton\",\n      value: diceId,\n      style: {\n        backgroundImage: picLog[picInd]\n      },\n      onClick: this.newroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Dice;","map":{"version":3,"sources":["/Users/learn/Desktop/folder/diceroll/src/dice.js"],"names":["React","Component","Dice","constructor","props","newlogandroll","newroll","newlogHandlerMaster","state","picInd","diceId","currentDiceId","setState","random","Math","floor","picselect","diceNum","newlogHandler","individualDiceLogs","push","picLog","render","logandroll","backgroundImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AACxBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUdC,aAVc,GAUE,MAAM;AAClB,WAAKC,OAAL;AACA,WAAKC,mBAAL;AACP,KAbiB;;AAAA,SAcdD,OAdc,GAcJ,MAAM;AAAA,wBAC2B,KAAKE,KADhC;AAAA,UACNC,MADM,eACNA,MADM;AAAA,UACEC,MADF,eACEA,MADF;AAAA,UACUC,aADV,eACUA,aADV;AAEZ,WAAKC,QAAL,CAAc;AAACD,QAAAA,aAAa,EAAED;AAAhB,OAAd;AACA,UAAIG,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAc,CAAd,GAAgB,CAA3B,CAAb;AACA,UAAIG,SAAS,GAAGH,MAAM,GAAE,CAAxB;AACA,WAAKD,QAAL,CAAc;AAACK,QAAAA,OAAO,EAAEJ;AAAV,OAAd;AACA,WAAKD,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAEO;AAAT,OAAd;AACH,KArBa;;AAAA,SAsBdE,aAtBc,GAsBE,MAAK;AAAA,yBACmB,KAAKV,KADxB;AAAA,UACZW,kBADY,gBACZA,kBADY;AAAA,UACQF,OADR,gBACQA,OADR;AAEjBE,MAAAA,kBAAkB,CAACC,IAAnB,CAAwBH,OAAxB;AACA,WAAKL,QAAL,CAAc;AAACO,QAAAA,kBAAkB,EAAEA;AAArB,OAAd;AACH,KA1Ba;;AAEd,SAAKX,KAAL,GAAa;AACTa,MAAAA,MAAM,EAAE,CAAC,kBAAD,EAAqB,kBAArB,EACJ,kBADI,EACgB,kBADhB,EAEJ,kBAFI,EAEgB,kBAFhB,CADC;AAITZ,MAAAA,MAAM,EAAC;AAJE,KAAb;AAOH;;AAmBDa,EAAAA,MAAM,GAAG;AAAA,sBACwC,KAAKlB,KAD7C;AAAA,QACEK,MADF,eACEA,MADF;AAAA,QACSc,UADT,eACSA,UADT;AAAA,QACqBN,OADrB,eACqBA,OADrB;AAAA,QAC8BP,MAD9B,eAC8BA,MAD9B;AAAA,QAEGW,MAFH,GAEc,KAAKb,KAFnB,CAEGa,MAFH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,OAAL,CADJ,EAEI;AAAQ,MAAA,EAAE,EAAEP,MAAZ;AAAoB,MAAA,KAAK,EAAG,YAA5B;AAAyC,MAAA,KAAK,EAAGA,MAAjD;AAAyD,MAAA,KAAK,EAAI;AAACc,QAAAA,eAAe,EAACH,MAAM,CAACZ,MAAD;AAAvB,OAAlE;AAAqG,MAAA,OAAO,EAAI,KAAKH,OAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAQH;;AAxCuB;;AA2C5B,eAAeJ,IAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Dice extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            picLog: [\"url('dice1.jpg')\", \"url('dice2.jpg')\",\n                \"url('dice3.jpg')\", \"url('dice4.jpg')\",\n                \"url('dice5.jpg')\", \"url('dice6.jpg')\"],\n            picInd:0,\n\n        }\n    }\n        newlogandroll = () => {\n            this.newroll()\n            this.newlogHandlerMaster()\n    }\n        newroll = () => {\n            let { picInd, diceId, currentDiceId} = this.state\n            this.setState({currentDiceId: diceId})\n            let random = Math.floor(Math.random()*6+1)\n            let picselect = random -1\n            this.setState({diceNum: random})\n            this.setState({picInd: picselect})\n        }\n        newlogHandler = () =>{\n            let {individualDiceLogs, diceNum} = this.state\n            individualDiceLogs.push(diceNum)\n            this.setState({individualDiceLogs: individualDiceLogs})\n        }\n\n    render() {\n        let {  picInd,logandroll, diceNum, diceId} = this.props\n        let {   picLog } = this.state\n        return(\n            <div>\n                <div>\n                    <h3>{diceNum}</h3>\n                    <button id={diceId} class = \"diceButton\" value ={diceId} style = {{backgroundImage:picLog[picInd]}}  onClick = {this.newroll}></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dice\n"]},"metadata":{},"sourceType":"module"}